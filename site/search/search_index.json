{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome Congratulations and welcome to the Microsoft Cities NYC team! We are happy to have you on board and are excited for what's to come next. This guide is a resource to use throughout your fellowship curated by previous and current fellows. Information on team projects, how to access your email, access, etc. is available in this guide. Start Here for onboarding. This guide was built with MkDocs. For full documentation visit mkdocs.org . General Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Updated as of 10/1/2018","title":"Home"},{"location":"#welcome","text":"Congratulations and welcome to the Microsoft Cities NYC team! We are happy to have you on board and are excited for what's to come next. This guide is a resource to use throughout your fellowship curated by previous and current fellows. Information on team projects, how to access your email, access, etc. is available in this guide. Start Here for onboarding. This guide was built with MkDocs. For full documentation visit mkdocs.org .","title":"Welcome"},{"location":"#general-commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Updated as of 10/1/2018","title":"General Commands"},{"location":"about/","text":"About Us The Microsoft Cities team has the unique opportunity to bridge the gap between government and technology relations. Civic Technology, best defined as technology that catalyzes civic participation and increases government performance (e.g. service delivery and city responsiveness), is a nascent field that possesses untapped potential. Microsoft specifically created the Microsft Cities team to: Understand how society and its use of technology is changing and Aid cities as they make this transition to a \u201cdigital government\u201d platform. Within the \u201cCivic Tech\u201d movement, there are multiple opportunities for change: open data and transparent government, easier access to tech and infrastructure and tools, 21st century skill for all populations, sustainable cities and robust civic tech communities (e.g. hacker events). Microsoft Cities\u2019 approach to fostering innovation and growth in this sector is to provide research on the implications of policy and society, facilitate partnerships across 501c3s, academic institutions, government organizations and private civic tech companies, and connect with the greater community in each city to crowd-source solutions to technical problems. To contextualize Microsoft Cities' impact, some previous initiatives include: providing monetary grants to community partners, supporting innovative government organizations that utilize technology, granting hard/software to civic tech start-ups, assisting with computer science education initiatives, creating an online, interactive \u201cCivic Graph\u201d to illustrate the civic tech community and working with Science Museums to provide STEM/STEAM opportunities. As a Civic Tech Fellow, your job will be to support the Microsoft Cities team as they implement new city-wide projects. Cities Team Organization Brad Smith - President Sid Espinosa - Microsoft Cities Lead Shelley Mckinley - Tech and Corporate Responsibility Kolleen Lambert - Cities team Operations Cities Locations & Leads: Boston - Aimee Sprung NYC - John Paul Farmer Chicago - Adam Hecktman San Francisco - Scott Mauvais San Jose - Jessica Weare Los Angeles - Lena Gonzalez Miami - Lucas Hernandez Detroit, Cleveland, Pittsburgh - [TBH] Elizabeth Grossman - National Projects Kevin Miller - Grants & National Projects National Top Civic Tech Partners Code For America: Code For America is a national non-profit dedicated to helping cities utilize technology in daily operations. The Boston Brigade is headed by Harlan Weber; meetings are Tuesday evenings at the Cambridge Innovation Center. Recently, CFA sent a team of \u201cFellows\u201d to work in the neighboring city of Somerville to assist the Somerville school system with creating a new database for student records. The Knight Foundation | @knightfdn The Knight Foundation is a philanthropic organization that funds a great deal of civic tech activity. The Foundation holds \u201cchallenges\u201d to promote the growth of the civic tech space and provide funding opportunities to public entrepreneurs. MassChallenge | @MassChallenge MassChallenge is a start-up accelerator that runs an annual global accelerator contest. Entrepreneurs accepted into the program benefit from funding, mentorship, and \u201coffice space\u201d at MassChallenge headquarters. At Microsoft New England, we connect with Kara Shurmantine. The MacArthur Foundation | @macfound The MacArthur Foundation is another philanthropic organization that seeks to promote the growth of civic technology. In particular, the foundation also offers \u201cgenius grants\u201d to outstanding individuals pursuing research. Personal Democracy Forum No active Twitter, instead each conference has a hashtag. The Personal Democracy Forum is a yearly gathering for the main civic leaders in the country. Based in New York City, the conference hosts a variety of speakers from industry, private corporations, non-profits and academic institutions. Brookings| @BrookingsMetro Brookings publishes an innovative report on \u201cSmart Cities\u201d that is the basis of a great deal of research for the field of civic technology. Brookings\u2019 reports address the intersection of economics, urban development and city politics. Bloomberg Philanthropies | @Bloomberg Cities Bloomberg Philanthropies has a division devoted to \u201cGovernment Innovation\u201d which runs the \u201cMayors Challenge\u201d and \u201cIndia Smart Cities Mission\u201d. The goal of the division is to empower cities to overcome stagnant policies and gridlock.","title":"About Microsoft Cities"},{"location":"about/#about-us","text":"The Microsoft Cities team has the unique opportunity to bridge the gap between government and technology relations. Civic Technology, best defined as technology that catalyzes civic participation and increases government performance (e.g. service delivery and city responsiveness), is a nascent field that possesses untapped potential. Microsoft specifically created the Microsft Cities team to: Understand how society and its use of technology is changing and Aid cities as they make this transition to a \u201cdigital government\u201d platform. Within the \u201cCivic Tech\u201d movement, there are multiple opportunities for change: open data and transparent government, easier access to tech and infrastructure and tools, 21st century skill for all populations, sustainable cities and robust civic tech communities (e.g. hacker events). Microsoft Cities\u2019 approach to fostering innovation and growth in this sector is to provide research on the implications of policy and society, facilitate partnerships across 501c3s, academic institutions, government organizations and private civic tech companies, and connect with the greater community in each city to crowd-source solutions to technical problems. To contextualize Microsoft Cities' impact, some previous initiatives include: providing monetary grants to community partners, supporting innovative government organizations that utilize technology, granting hard/software to civic tech start-ups, assisting with computer science education initiatives, creating an online, interactive \u201cCivic Graph\u201d to illustrate the civic tech community and working with Science Museums to provide STEM/STEAM opportunities. As a Civic Tech Fellow, your job will be to support the Microsoft Cities team as they implement new city-wide projects.","title":"About Us"},{"location":"about/#cities-team-organization","text":"Brad Smith - President Sid Espinosa - Microsoft Cities Lead Shelley Mckinley - Tech and Corporate Responsibility Kolleen Lambert - Cities team Operations Cities Locations & Leads: Boston - Aimee Sprung NYC - John Paul Farmer Chicago - Adam Hecktman San Francisco - Scott Mauvais San Jose - Jessica Weare Los Angeles - Lena Gonzalez Miami - Lucas Hernandez Detroit, Cleveland, Pittsburgh - [TBH] Elizabeth Grossman - National Projects Kevin Miller - Grants & National Projects","title":"Cities Team Organization"},{"location":"about/#national-top-civic-tech-partners","text":"Code For America: Code For America is a national non-profit dedicated to helping cities utilize technology in daily operations. The Boston Brigade is headed by Harlan Weber; meetings are Tuesday evenings at the Cambridge Innovation Center. Recently, CFA sent a team of \u201cFellows\u201d to work in the neighboring city of Somerville to assist the Somerville school system with creating a new database for student records. The Knight Foundation | @knightfdn The Knight Foundation is a philanthropic organization that funds a great deal of civic tech activity. The Foundation holds \u201cchallenges\u201d to promote the growth of the civic tech space and provide funding opportunities to public entrepreneurs. MassChallenge | @MassChallenge MassChallenge is a start-up accelerator that runs an annual global accelerator contest. Entrepreneurs accepted into the program benefit from funding, mentorship, and \u201coffice space\u201d at MassChallenge headquarters. At Microsoft New England, we connect with Kara Shurmantine. The MacArthur Foundation | @macfound The MacArthur Foundation is another philanthropic organization that seeks to promote the growth of civic technology. In particular, the foundation also offers \u201cgenius grants\u201d to outstanding individuals pursuing research. Personal Democracy Forum No active Twitter, instead each conference has a hashtag. The Personal Democracy Forum is a yearly gathering for the main civic leaders in the country. Based in New York City, the conference hosts a variety of speakers from industry, private corporations, non-profits and academic institutions. Brookings| @BrookingsMetro Brookings publishes an innovative report on \u201cSmart Cities\u201d that is the basis of a great deal of research for the field of civic technology. Brookings\u2019 reports address the intersection of economics, urban development and city politics. Bloomberg Philanthropies | @Bloomberg Cities Bloomberg Philanthropies has a division devoted to \u201cGovernment Innovation\u201d which runs the \u201cMayors Challenge\u201d and \u201cIndia Smart Cities Mission\u201d. The goal of the division is to empower cities to overcome stagnant policies and gridlock.","title":"National Top Civic Tech Partners"},{"location":"chatbot/","text":"What Is A Chat Bot? A chat bot is a customized computer program that uses AI softwware to either have a conversation with the user and/or perform actions according to the provided intents by the user. The Purpose For Our Chat Bot? The reason for this chat bot is to create a replicable bot that can be used to help have a quicker response for those that may have simple/FAQ during certain situations. This can lead to increase the amount of customers that can be helped compared to the use of the regular help via calls with operators. The bot will also be able to help a wider variety of customers with the addition of translation to the chat bot. Pre-Requisites Basic knowledge on how to navigate through Azure Understanding the concept of Object-Oriented Programming (OOP) We specifically use C# The enthusiasm to learn and read A LOT! \ud83d\ude0a Technical Breakdown What you will need to create this chat bot: Any chat bot created is efficiently made via Azure - using azure to host it and to help you create the basic template for the chat bot in C#. This chat bot will consist of a Question and Answer Maker (AKA QnA Maker) for conversation and for the I/O of information for the user. QnA Maker is a Microsoft Cognitive Service that provides a QnA Service with a graphical user interface (GUI). It is a web-based service and REST API that uses artificial intelligence to respond to questions by the use of key words or phrases. In order to respond to the user\u2019s your QnA service must be connected to your knowledge base. A knowledge base is what contains the key value pairs of the questions and answers for the chat bot. Further references: Overview This also consists of creating a knowledge base with its own unique keys created by the QnA maker and your own choice of FAQ. Here is an easy quick guide to make a QnA Maker with a knowledge base. This bot also consists of the use of a Language Understanding Intelligent Service (LUIS) app which uses a machine learning -based service to build natural language for the chat bot. LUIS is also a Microsoft Cognitive Service combines easily with the \u201cspeech service for instant speech to intent processing, and with the Azure Bot Service, making it easy to create a sophisticated bot.\u201d It is mainly used to create a more natural language by predicting the user\u2019s intent and therefore then understanding how to communicate or respond to the user appropriately. You must create your own intents. Within these intents you must also construct possible utterances to perform this specific intent. Example: One intent any user might want to us is \u201cCancel.\u201d However, not every user will say this intent the same way. This is why we can create our own variety of utterances such as \u201cstop\u201d, \u201cplease stop\u201d, \u201cnever mind\u201d, or \u201cabort.\u201d These are just a few of the many utterances a user can represent this intent to the bot. This purpose of LUIS is to learn and train itself to understand the different ways a user can portray this intention to then act on it. Here is a more thorough guide to what is LUIS and how to create both the possible intents and utterances for your bot. To have the best outcomes with LUIS this consists of consistently testing and training it with understanding your (users) intentions. Using the Microsoft Visual Studio has been the best text editor to use in order to track, edit, build and debug your bots code. For debugging it is important to use great tools like the Bot Framework Emulator. This will help track your errors and view where and when the issues are taking place when running your bot remotely on a localhost. As a developer you will be able to pin point errors and specifically trace when and if messages are even being sent back and forth through the LUIS intents, methods and QnA dialog. This is a link to guide you on how to install and use this. What You Will Need To Start Access to LastPass (Whether you are creating a new or using an existing bot). You will also need to have access to the Civic Machine Azure account. An account with QnA Maker here: www.qnamaker.ai * Be sure to use the same Azure email in which you have your QnA bot to create this QnA Maker account. An account with LUIS App here: www.luis.ai * Be sure to use the same Azure email in which you have your LUIS bot to create this LUIS App account. The Microsoft Visual Studio Code text editor. The Bot Framework Emulator. More info on this here How To Integrate QnA And LUIS Sign in to Azure Create your QnA bot in C# (Be sure to have a knowledge base) Create your LUIS bot in C# (Be sure to have some intents that exist that also match with the intentional questions from the knowledge base) Go to Azure portal and on the left side bar click on \u201cResource groups\u201d and click on to your QnA bot. Then, click on to your \u201cWeb App Bot.\u201d Next, click on \u201cBuild\u201d on the left side bar. After this click on \u201cDownload bot source code\u201d in order to develop your bot locally. Repeat step 4 but this time for your LUIS bot. Next, on Azure go into your \u201cResource Groups\u201d, then the QnA bot you have made and click on \u201cTest in Web Chat\u201d inorder to make. If issues do occur be sure to check that in your \u201cApplication Settings\u201d all of your \u201cApp Setting Names\u201d and \u201cValues\u201d such as \u201cQnAAuthKey\u201d, \u201cQnAEndpointHostName\u201d, \u201cQnAKnowledgebaseId\u201d, and \u201cQnASubcriptionKey\u201d are all titled this way and also have the correct keys/values. (More information of this is in the previously mention Technical Breakdown section above --in this specific link .) Then, using Microsoft Visual Studio text editor open up the \u201csln\u201d file from your locally downloaded QnA bot source code. Now, in your QnA bot source code open up your \u201cController\u201d folder and click onto your \u201cMessagesController.cs\u201d file. Here, in the method titled public virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)S specifically and only inside the curly brackets of your first \u201cif-statement\u201d titled if (activity.GetActivityType() == ActivityTypes.Message){in here} you will add and only be sure to have this line of code (provided below) in there: await Conversation.SendAsync(activity, () => new BasicLuisDialog()); After this in the in the \u201cDialogs\u201d folder please create a new file titled \u201cLuisDialog.cs\u201d. Please also be sure to save all changes. Next, repeat step 7 on a new window for your LUIS bot source code. Then, from your LUIS bot source code be sure to copy all the lines of code from the file \u201cBasicLuisDialog.cs\u201d within the \u201cDialogs\u201d folder and paste it all into the file \u201cLuisDialog.cs\u201d that is in the QnA bot source code. Please also be sure to save all changes. After, in the QnA bot source code in the \u201cDialogs\u201d folder please create a new file titled \u201cLuisDialog.cs\u201d and adjust the line namespace Microsoft.Bot.Sample.QnABot (therefore replace the LUIS \u201cnamespace\u201d line with the QnA one) Then, above that namespace Microsoft.Bot.Sample.QnABot line of code add these two lines of code: using Microsoft.Bot.Connector; using System.Threading; Next, in the \"LuisDialog.cs\u201d file within all of your intents such as [LuisIntent(\"None\")] public async Task NoneIntent(IDialogContext context, LuisResult result){in here} please replace all the lines of code within the curly brackets with these: string message = $\"I am in the LUIS Intent For {result.Intents[0].Intent} - Routing to QnA... \"; await context.PostAsync(message); var userQuestion = (context.Activity as Activity).Text; await context.Forward(new QnADialog(), ResumeAfterQnA, context.Activity, CancellationToken.None); await this.ShowLuisResult(context, result); To test locally be sure to add all of your App Setting items like \u201cLuisAPIHostName\u201d, \u201cLuisAPIKey\u201d, and \u201cLuisAppId\u201d into your \u201cWeb.config\u201d file (as well as all the QnA items mentioned in step 6a) specifically within the tags in this format for example: <add key=\"LuisAppId\" value=\"with your id value in here\" /> To test on azure please be sure to add all of the LUIS items mentioned in step 15 into the \u201cApplications Settings\u201d of the QnA Bot after you have also added the updated information from steps 8-14 to the Azure online code editor. You can find the option to \u201cOpen code online editor\u201d in the \u201cBuild\u201d section under \u201cBot Management\u201d. Finally, after you have done these changes in order to save these changes you must enter into the \u201cOpen Console\u201d within this open code editor (or hold Ctrl+Shift+C) and run the command \u201cbuild.cmd\u201d then press enter. Your code should have now been updated to the online Azure QnA bot. Now, test your bot in the \u201cTest in Web Chat\u201d. **Further updates will be added to this chat bot documentation in order to add other features to this project","title":"Project - Chat Bot"},{"location":"chatbot/#what-is-a-chat-bot","text":"A chat bot is a customized computer program that uses AI softwware to either have a conversation with the user and/or perform actions according to the provided intents by the user.","title":"What Is A Chat Bot?"},{"location":"chatbot/#the-purpose-for-our-chat-bot","text":"The reason for this chat bot is to create a replicable bot that can be used to help have a quicker response for those that may have simple/FAQ during certain situations. This can lead to increase the amount of customers that can be helped compared to the use of the regular help via calls with operators. The bot will also be able to help a wider variety of customers with the addition of translation to the chat bot.","title":"The Purpose For Our Chat Bot?"},{"location":"chatbot/#pre-requisites","text":"Basic knowledge on how to navigate through Azure Understanding the concept of Object-Oriented Programming (OOP) We specifically use C# The enthusiasm to learn and read A LOT! \ud83d\ude0a","title":"Pre-Requisites"},{"location":"chatbot/#technical-breakdown","text":"What you will need to create this chat bot: Any chat bot created is efficiently made via Azure - using azure to host it and to help you create the basic template for the chat bot in C#. This chat bot will consist of a Question and Answer Maker (AKA QnA Maker) for conversation and for the I/O of information for the user. QnA Maker is a Microsoft Cognitive Service that provides a QnA Service with a graphical user interface (GUI). It is a web-based service and REST API that uses artificial intelligence to respond to questions by the use of key words or phrases. In order to respond to the user\u2019s your QnA service must be connected to your knowledge base. A knowledge base is what contains the key value pairs of the questions and answers for the chat bot. Further references: Overview This also consists of creating a knowledge base with its own unique keys created by the QnA maker and your own choice of FAQ. Here is an easy quick guide to make a QnA Maker with a knowledge base. This bot also consists of the use of a Language Understanding Intelligent Service (LUIS) app which uses a machine learning -based service to build natural language for the chat bot. LUIS is also a Microsoft Cognitive Service combines easily with the \u201cspeech service for instant speech to intent processing, and with the Azure Bot Service, making it easy to create a sophisticated bot.\u201d It is mainly used to create a more natural language by predicting the user\u2019s intent and therefore then understanding how to communicate or respond to the user appropriately. You must create your own intents. Within these intents you must also construct possible utterances to perform this specific intent. Example: One intent any user might want to us is \u201cCancel.\u201d However, not every user will say this intent the same way. This is why we can create our own variety of utterances such as \u201cstop\u201d, \u201cplease stop\u201d, \u201cnever mind\u201d, or \u201cabort.\u201d These are just a few of the many utterances a user can represent this intent to the bot. This purpose of LUIS is to learn and train itself to understand the different ways a user can portray this intention to then act on it. Here is a more thorough guide to what is LUIS and how to create both the possible intents and utterances for your bot. To have the best outcomes with LUIS this consists of consistently testing and training it with understanding your (users) intentions. Using the Microsoft Visual Studio has been the best text editor to use in order to track, edit, build and debug your bots code. For debugging it is important to use great tools like the Bot Framework Emulator. This will help track your errors and view where and when the issues are taking place when running your bot remotely on a localhost. As a developer you will be able to pin point errors and specifically trace when and if messages are even being sent back and forth through the LUIS intents, methods and QnA dialog. This is a link to guide you on how to install and use this.","title":"Technical Breakdown"},{"location":"chatbot/#what-you-will-need-to-start","text":"Access to LastPass (Whether you are creating a new or using an existing bot). You will also need to have access to the Civic Machine Azure account. An account with QnA Maker here: www.qnamaker.ai * Be sure to use the same Azure email in which you have your QnA bot to create this QnA Maker account. An account with LUIS App here: www.luis.ai * Be sure to use the same Azure email in which you have your LUIS bot to create this LUIS App account. The Microsoft Visual Studio Code text editor. The Bot Framework Emulator. More info on this here","title":"What You Will Need To Start"},{"location":"chatbot/#how-to-integrate-qna-and-luis","text":"Sign in to Azure Create your QnA bot in C# (Be sure to have a knowledge base) Create your LUIS bot in C# (Be sure to have some intents that exist that also match with the intentional questions from the knowledge base) Go to Azure portal and on the left side bar click on \u201cResource groups\u201d and click on to your QnA bot. Then, click on to your \u201cWeb App Bot.\u201d Next, click on \u201cBuild\u201d on the left side bar. After this click on \u201cDownload bot source code\u201d in order to develop your bot locally. Repeat step 4 but this time for your LUIS bot. Next, on Azure go into your \u201cResource Groups\u201d, then the QnA bot you have made and click on \u201cTest in Web Chat\u201d inorder to make. If issues do occur be sure to check that in your \u201cApplication Settings\u201d all of your \u201cApp Setting Names\u201d and \u201cValues\u201d such as \u201cQnAAuthKey\u201d, \u201cQnAEndpointHostName\u201d, \u201cQnAKnowledgebaseId\u201d, and \u201cQnASubcriptionKey\u201d are all titled this way and also have the correct keys/values. (More information of this is in the previously mention Technical Breakdown section above --in this specific link .) Then, using Microsoft Visual Studio text editor open up the \u201csln\u201d file from your locally downloaded QnA bot source code. Now, in your QnA bot source code open up your \u201cController\u201d folder and click onto your \u201cMessagesController.cs\u201d file. Here, in the method titled public virtual async Task<HttpResponseMessage> Post([FromBody] Activity activity)S specifically and only inside the curly brackets of your first \u201cif-statement\u201d titled if (activity.GetActivityType() == ActivityTypes.Message){in here} you will add and only be sure to have this line of code (provided below) in there: await Conversation.SendAsync(activity, () => new BasicLuisDialog()); After this in the in the \u201cDialogs\u201d folder please create a new file titled \u201cLuisDialog.cs\u201d. Please also be sure to save all changes. Next, repeat step 7 on a new window for your LUIS bot source code. Then, from your LUIS bot source code be sure to copy all the lines of code from the file \u201cBasicLuisDialog.cs\u201d within the \u201cDialogs\u201d folder and paste it all into the file \u201cLuisDialog.cs\u201d that is in the QnA bot source code. Please also be sure to save all changes. After, in the QnA bot source code in the \u201cDialogs\u201d folder please create a new file titled \u201cLuisDialog.cs\u201d and adjust the line namespace Microsoft.Bot.Sample.QnABot (therefore replace the LUIS \u201cnamespace\u201d line with the QnA one) Then, above that namespace Microsoft.Bot.Sample.QnABot line of code add these two lines of code: using Microsoft.Bot.Connector; using System.Threading; Next, in the \"LuisDialog.cs\u201d file within all of your intents such as [LuisIntent(\"None\")] public async Task NoneIntent(IDialogContext context, LuisResult result){in here} please replace all the lines of code within the curly brackets with these: string message = $\"I am in the LUIS Intent For {result.Intents[0].Intent} - Routing to QnA... \"; await context.PostAsync(message); var userQuestion = (context.Activity as Activity).Text; await context.Forward(new QnADialog(), ResumeAfterQnA, context.Activity, CancellationToken.None); await this.ShowLuisResult(context, result); To test locally be sure to add all of your App Setting items like \u201cLuisAPIHostName\u201d, \u201cLuisAPIKey\u201d, and \u201cLuisAppId\u201d into your \u201cWeb.config\u201d file (as well as all the QnA items mentioned in step 6a) specifically within the tags in this format for example: <add key=\"LuisAppId\" value=\"with your id value in here\" /> To test on azure please be sure to add all of the LUIS items mentioned in step 15 into the \u201cApplications Settings\u201d of the QnA Bot after you have also added the updated information from steps 8-14 to the Azure online code editor. You can find the option to \u201cOpen code online editor\u201d in the \u201cBuild\u201d section under \u201cBot Management\u201d. Finally, after you have done these changes in order to save these changes you must enter into the \u201cOpen Console\u201d within this open code editor (or hold Ctrl+Shift+C) and run the command \u201cbuild.cmd\u201d then press enter. Your code should have now been updated to the online Azure QnA bot. Now, test your bot in the \u201cTest in Web Chat\u201d. **Further updates will be added to this chat bot documentation in order to add other features to this project","title":"How To Integrate QnA And LUIS"},{"location":"civicgraph/","text":"What is Civic Graph? Civic Graph shows who\u2019s who and what\u2019s what in the growing field of civic technology. It is an open source, crowd-sourced knowledge base and data visualization project. It aims to map the civic tech community players and connections -- their types, locations and levels of influence in an interactive, intuitive, and modern way. Technical Breakdown Civic Graph is built in three parts: Civic-Graph-UI: Angular.js (v1) and D3.js - https://github.com/MicrosoftTCE/civic-graph-UI Civic-Graph-API: Python (v3) - https://github.com/MicrosoftTCE/civic-graph-API Azure hosting Civic Graph UI The UI front-end is built with Angular.js (v1) and D3.js for the network graph visualization. Civic Graph graph nodes represent entities, which could consist of people or organizations involved in the field of civic technology. The links among the entities represent the types of relationships or connections these entities share. Filtering options provide a unique method for visualizing certain aspects of the civic technology space. Type of Entities Color Representation For-Profit Green Non-Profit Blue Government Red Individuals Orange Type of Connections Color Representation Funding Red Data Blue Employment Purple Collaboration Orange Civic Graph API The API back-end is built with Python and serves information from a SQL database. API links: - http://api.civicgraph.io/api/entities - http://api.civicgraph.io/api/connections - http://api.civicgraph.io/api/categories Azure Hosting The fullstack application is hosted on Azure cloud . Our services are listed under the Civic-Graph resources froup. Local Environment Setup UI setup Most updated instructions can be found on the Civic Graph UI Github repo: https://github.com/MicrosoftTCE/civic-graph-UI All changes made to setup instructions should be made in the Github repo. API setup Most updated instructions can be found on the Civic Graph API Github repo: https://github.com/MicrosoftTCE/civic-graph-API All changes made to setup instructions should be made in the Github repo. Troubleshooting What happens when something breaks in Civic Graph? The following are best practices and suggested steps as per previous experience. Our services are hosted in the \"South Central US\" datacenters. This is automatically assigned and as far as we know, based on answers from Azure technical support, there is no way to change this. Very rarely does Azure go down but checking the Azure status page is a simple first step to take in case there is an issue with Azure. Link: https://azure.microsoft.com/en-us/status/ Diagnose: If Azure status is all good, begin diagnosis. Is this a UI issue or an API issue? UI issues include position of elements being off, text displayed incorrectly, etc. API issues include data on graph not appearing or graph not appearing at all. UI issues can be tied into API issues. For example, if the graph keeps loading and does not display any content, this is an API issue with failure to render on the UI. UI issue If the issue is with the UI: Checkout master branch for the UI repo and create a new git branch with the name of the issue Serve the app locally and try to replicate the UI problem on your local environment Test any proposed changes to fix the problem locally Once you're satisfied with the changes, commit and push them to your new branch Create a Pull Request to merge into Master and have it reviewed to merge into az-prod branch API issue To check for an API issue, inspect the page using Google Chrome Developer Tools. If there are any red warnings, click on them to review. Usually, API issues are related to the API code breaking, database not updating, or a break in the link to the API. Check the API links above to see if any return an error. To diagnose an API issue further, you want to go to Azure portal and check the logs as follows: Go to Resources > Civic-Graph or Link Click into the Civic-Graph-API Web service On the left sidebar, select Diagnose and solve problems Search for \"failed request tracing logs\" Select the most recent log with a failed status code of 400 or 500 Read through the trace log and see if there is a line that the API is failing at. You will need to go through the API source code and find that line to start applying a fix. Further Technical Support If you still need help diagnosing a problem and you have searched through all available (online) resources, you can open a support ticket via Azure for Azure technical support to assist. Your mileage may vary with how far someone will go to help you and you can always submit more than one ticket if you don't feel the issue has been resolved. Make sure to note everything you have tried so far. SQL Database The database for Civic Graph API is hosted on ClearDB. It would be best to host under Azure DB instead but this has sufficed for now. Credentials for the database via ClearDB can be accessed via LastPass. Registrar This project is registered under Namecheap. Credentials to access Namecheap are available via LastPass. SSL Certificate An SSL certificate is available via Azure portal for this web app.","title":"Project - Civic Graph"},{"location":"civicgraph/#what-is-civic-graph","text":"Civic Graph shows who\u2019s who and what\u2019s what in the growing field of civic technology. It is an open source, crowd-sourced knowledge base and data visualization project. It aims to map the civic tech community players and connections -- their types, locations and levels of influence in an interactive, intuitive, and modern way.","title":"What is Civic Graph?"},{"location":"civicgraph/#technical-breakdown","text":"Civic Graph is built in three parts: Civic-Graph-UI: Angular.js (v1) and D3.js - https://github.com/MicrosoftTCE/civic-graph-UI Civic-Graph-API: Python (v3) - https://github.com/MicrosoftTCE/civic-graph-API Azure hosting","title":"Technical Breakdown"},{"location":"civicgraph/#civic-graph-ui","text":"The UI front-end is built with Angular.js (v1) and D3.js for the network graph visualization. Civic Graph graph nodes represent entities, which could consist of people or organizations involved in the field of civic technology. The links among the entities represent the types of relationships or connections these entities share. Filtering options provide a unique method for visualizing certain aspects of the civic technology space. Type of Entities Color Representation For-Profit Green Non-Profit Blue Government Red Individuals Orange Type of Connections Color Representation Funding Red Data Blue Employment Purple Collaboration Orange","title":"Civic Graph UI"},{"location":"civicgraph/#civic-graph-api","text":"The API back-end is built with Python and serves information from a SQL database. API links: - http://api.civicgraph.io/api/entities - http://api.civicgraph.io/api/connections - http://api.civicgraph.io/api/categories","title":"Civic Graph API"},{"location":"civicgraph/#azure-hosting","text":"The fullstack application is hosted on Azure cloud . Our services are listed under the Civic-Graph resources froup.","title":"Azure Hosting"},{"location":"civicgraph/#local-environment-setup","text":"","title":"Local Environment Setup"},{"location":"civicgraph/#ui-setup","text":"Most updated instructions can be found on the Civic Graph UI Github repo: https://github.com/MicrosoftTCE/civic-graph-UI All changes made to setup instructions should be made in the Github repo.","title":"UI setup"},{"location":"civicgraph/#api-setup","text":"Most updated instructions can be found on the Civic Graph API Github repo: https://github.com/MicrosoftTCE/civic-graph-API All changes made to setup instructions should be made in the Github repo.","title":"API setup"},{"location":"civicgraph/#troubleshooting","text":"What happens when something breaks in Civic Graph? The following are best practices and suggested steps as per previous experience. Our services are hosted in the \"South Central US\" datacenters. This is automatically assigned and as far as we know, based on answers from Azure technical support, there is no way to change this. Very rarely does Azure go down but checking the Azure status page is a simple first step to take in case there is an issue with Azure. Link: https://azure.microsoft.com/en-us/status/","title":"Troubleshooting"},{"location":"civicgraph/#diagnose","text":"If Azure status is all good, begin diagnosis. Is this a UI issue or an API issue? UI issues include position of elements being off, text displayed incorrectly, etc. API issues include data on graph not appearing or graph not appearing at all. UI issues can be tied into API issues. For example, if the graph keeps loading and does not display any content, this is an API issue with failure to render on the UI.","title":"Diagnose:"},{"location":"civicgraph/#ui-issue","text":"If the issue is with the UI: Checkout master branch for the UI repo and create a new git branch with the name of the issue Serve the app locally and try to replicate the UI problem on your local environment Test any proposed changes to fix the problem locally Once you're satisfied with the changes, commit and push them to your new branch Create a Pull Request to merge into Master and have it reviewed to merge into az-prod branch","title":"UI issue"},{"location":"civicgraph/#api-issue","text":"To check for an API issue, inspect the page using Google Chrome Developer Tools. If there are any red warnings, click on them to review. Usually, API issues are related to the API code breaking, database not updating, or a break in the link to the API. Check the API links above to see if any return an error. To diagnose an API issue further, you want to go to Azure portal and check the logs as follows: Go to Resources > Civic-Graph or Link Click into the Civic-Graph-API Web service On the left sidebar, select Diagnose and solve problems Search for \"failed request tracing logs\" Select the most recent log with a failed status code of 400 or 500 Read through the trace log and see if there is a line that the API is failing at. You will need to go through the API source code and find that line to start applying a fix.","title":"API issue"},{"location":"civicgraph/#further-technical-support","text":"If you still need help diagnosing a problem and you have searched through all available (online) resources, you can open a support ticket via Azure for Azure technical support to assist. Your mileage may vary with how far someone will go to help you and you can always submit more than one ticket if you don't feel the issue has been resolved. Make sure to note everything you have tried so far.","title":"Further Technical Support"},{"location":"civicgraph/#sql-database","text":"The database for Civic Graph API is hosted on ClearDB. It would be best to host under Azure DB instead but this has sufficed for now. Credentials for the database via ClearDB can be accessed via LastPass.","title":"SQL Database"},{"location":"civicgraph/#registrar","text":"This project is registered under Namecheap. Credentials to access Namecheap are available via LastPass.","title":"Registrar"},{"location":"civicgraph/#ssl-certificate","text":"An SSL certificate is available via Azure portal for this web app.","title":"SSL Certificate"},{"location":"onboarding/","text":"Check List Congratulations on being accepted as a Civic Technology and Engagement Fellow! Here\u2019s a handy checklist of items coming your way: Laptop Email alias Microsoft Badge (Contact diocha@microsoft.com) Microsoft Research Building Badge (Talk to MSR Receptionist) Grand Central Tech Badge (Contact julia@grandcentraltech.com) Civic Hall Access (John must add you to list) NOTE \u2013 you may receive a bit more than just these items, anything after these items depends on where you are stationed and your director. These may include: Surface Pro Docking Station Arc Touch Mouse Desk space Monitor Speakers Your email address alias will be assigned to you some days after your first work day, and the badge will happen a few days after that. Your director will need to approve your email access. Access to Tech Resources Confirm you have access to the following resources before starting on a project. Email Once your email alias is set up, you can download the Microsoft Authenticator app to set up two-step verification before setting up your email on mobile. Once Authenticator setup is complete, download the Microsoft Outlook app to sync your email on your phone. LastPass LastPass stores the team's shared logins for various services including Outlook, Github, and Azure. John must grant you priveleges to view these passwords. Use your Microsoft email account to access LastPass. Github TCE John or a current fellow will need to grant you access to the Microsoft TCE Github team . Access can be granted by going to the team page > clicking \"People\" tab > click \"Invite Member\". Note that there is a 6-person limit for team members under our current Github subscription. Github MicrosoftNY We have a MicrosoftNY account for use with Github for synching repositories to Azure. The credentials are available via LastPass. Azure Azure hosts most of our team projects and applications. The login for Azure is available via LastPass. Laptop Setup Setting Up Your New PC Attach the Surface Pro Ethernet Adapter to the Surface Pro. Press and hold the volume down button and then press the power button, continue to hold the volume down button until the Surface starts to boot from the USB key. A dialog box will appear that states that it is \u201cChecking Media Presence\u2026\u2026\u201d. Then it will \u201cStart PXE over IPv4\u201d. When prompted press Enter for network boot service Choose MSIT all supported windows client/ server OS Choose your language and press enter. Under user alias, enter your user alias (e.g. v-aherna@microsoft.com) If you do not have an alias yet, please contact your TCE Supervisor Under domain choose the domain you are situated in - ask your supervisor for the exact information For \u201cTask Sequence\u201d choose Windows 10 64bit & office 2016 Under Computer Details, Name your computer (when naming your computer, ensure that the name is not generic, i.e. \u201cwork computer\u201d \u2026. Names MUST BE UNIQUE Under \u201cdomain to join\u201d make sure it is the same as earlier For your username, delete the \u201c@microsoft.com\u201d text for Installation Partition, tick \u201cI acknowledge that any and all data on this hard disk will be permanently erased\" For language packs choose English and any other language packs you\u2019re interested in Locale and time keep as is For administrator password can be anything you want \u2013 I\u2019d recommend keeping it the same as your alias account\u2019s password Keep local administrators as is Under bit locker keep as is Finally, under ready, ensure everything is as you\u2019d like it and click begin. Wait for the installation to finish. Estimated time 30- 45 minutes How to sync / connect @microsoft.com and personal email NOTE: if you connect work email accounts to your phones there will be major security changes to that device. Some of these changes include a more complex password, device management which includes unchangeable settings (i.e. screen time out settings, etc.) and most importantly, a direct link from your phone to Microsoft. If you already have your device managed by another organization, you cannot add Microsoft email to your device. PLEASE BE 100% SURE YOU ARE OK WITH CONNECTING YOUR WORK ACCOUNT TO YOUR PERSONAL PHONE. These changes cannot be undone without factory resetting your device! Microsoft Support Need More Help? Contact the Help Desk! \u00b7 Land Line Number: 425-706-5000 \u00b7 Skype: 1-866-539-4191 And don\u2019t forget your director is always there to help you out! Building Visitor Access Policy Civic Hall access does not require a badge. You sign in each day you are at Civic Hall. For access to Microsoft Research and Microsoft Times Square buildings, use your Microsoft Badge. For guest access to Microsoft spaces, visiting Microsoft employees and visitors must be pre-registered. Please submit name (first & last), date, and time of visit to the NYC-641 AOA Facilities Team at NYC641HELP@microsoft.com, or stop by reception. All visitors must sign in with lobby security, present valid identification and state who they are visiting. If you have any questions or concerns, please contact NYC641HELP.","title":"Start Here - Onboarding"},{"location":"onboarding/#check-list","text":"Congratulations on being accepted as a Civic Technology and Engagement Fellow! Here\u2019s a handy checklist of items coming your way: Laptop Email alias Microsoft Badge (Contact diocha@microsoft.com) Microsoft Research Building Badge (Talk to MSR Receptionist) Grand Central Tech Badge (Contact julia@grandcentraltech.com) Civic Hall Access (John must add you to list) NOTE \u2013 you may receive a bit more than just these items, anything after these items depends on where you are stationed and your director. These may include: Surface Pro Docking Station Arc Touch Mouse Desk space Monitor Speakers Your email address alias will be assigned to you some days after your first work day, and the badge will happen a few days after that. Your director will need to approve your email access.","title":"Check List"},{"location":"onboarding/#access-to-tech-resources","text":"Confirm you have access to the following resources before starting on a project. Email Once your email alias is set up, you can download the Microsoft Authenticator app to set up two-step verification before setting up your email on mobile. Once Authenticator setup is complete, download the Microsoft Outlook app to sync your email on your phone. LastPass LastPass stores the team's shared logins for various services including Outlook, Github, and Azure. John must grant you priveleges to view these passwords. Use your Microsoft email account to access LastPass. Github TCE John or a current fellow will need to grant you access to the Microsoft TCE Github team . Access can be granted by going to the team page > clicking \"People\" tab > click \"Invite Member\". Note that there is a 6-person limit for team members under our current Github subscription. Github MicrosoftNY We have a MicrosoftNY account for use with Github for synching repositories to Azure. The credentials are available via LastPass. Azure Azure hosts most of our team projects and applications. The login for Azure is available via LastPass.","title":"Access to Tech Resources"},{"location":"onboarding/#laptop-setup","text":"","title":"Laptop Setup"},{"location":"onboarding/#setting-up-your-new-pc","text":"Attach the Surface Pro Ethernet Adapter to the Surface Pro. Press and hold the volume down button and then press the power button, continue to hold the volume down button until the Surface starts to boot from the USB key. A dialog box will appear that states that it is \u201cChecking Media Presence\u2026\u2026\u201d. Then it will \u201cStart PXE over IPv4\u201d. When prompted press Enter for network boot service Choose MSIT all supported windows client/ server OS Choose your language and press enter. Under user alias, enter your user alias (e.g. v-aherna@microsoft.com) If you do not have an alias yet, please contact your TCE Supervisor Under domain choose the domain you are situated in - ask your supervisor for the exact information For \u201cTask Sequence\u201d choose Windows 10 64bit & office 2016 Under Computer Details, Name your computer (when naming your computer, ensure that the name is not generic, i.e. \u201cwork computer\u201d \u2026. Names MUST BE UNIQUE Under \u201cdomain to join\u201d make sure it is the same as earlier For your username, delete the \u201c@microsoft.com\u201d text for Installation Partition, tick \u201cI acknowledge that any and all data on this hard disk will be permanently erased\" For language packs choose English and any other language packs you\u2019re interested in Locale and time keep as is For administrator password can be anything you want \u2013 I\u2019d recommend keeping it the same as your alias account\u2019s password Keep local administrators as is Under bit locker keep as is Finally, under ready, ensure everything is as you\u2019d like it and click begin. Wait for the installation to finish. Estimated time 30- 45 minutes","title":"Setting Up Your New PC"},{"location":"onboarding/#how-to-sync-connect-microsoftcom-and-personal-email","text":"NOTE: if you connect work email accounts to your phones there will be major security changes to that device. Some of these changes include a more complex password, device management which includes unchangeable settings (i.e. screen time out settings, etc.) and most importantly, a direct link from your phone to Microsoft. If you already have your device managed by another organization, you cannot add Microsoft email to your device. PLEASE BE 100% SURE YOU ARE OK WITH CONNECTING YOUR WORK ACCOUNT TO YOUR PERSONAL PHONE. These changes cannot be undone without factory resetting your device!","title":"How to sync / connect @microsoft.com and personal email"},{"location":"onboarding/#microsoft-support","text":"Need More Help? Contact the Help Desk! \u00b7 Land Line Number: 425-706-5000 \u00b7 Skype: 1-866-539-4191 And don\u2019t forget your director is always there to help you out!","title":"Microsoft Support"},{"location":"onboarding/#building-visitor-access-policy","text":"Civic Hall access does not require a badge. You sign in each day you are at Civic Hall. For access to Microsoft Research and Microsoft Times Square buildings, use your Microsoft Badge. For guest access to Microsoft spaces, visiting Microsoft employees and visitors must be pre-registered. Please submit name (first & last), date, and time of visit to the NYC-641 AOA Facilities Team at NYC641HELP@microsoft.com, or stop by reception. All visitors must sign in with lobby security, present valid identification and state who they are visiting. If you have any questions or concerns, please contact NYC641HELP.","title":"Building Visitor Access Policy"},{"location":"starthere/","text":"Expectations Expectations and roles vary amongst the different Fellows who pass through the program. It is best to discuss, early on, with the directors of your program to best understand the goals that they have in mind, as well as to convey what you personally hope to seek from the program. Regardless of your focus, communication of your role within Microsoft is beneficial to both Microsoft in terms of broadcasting Cities\u2019 mission and yourself. Personal gain can be had in the form of additional contacts, expanding your professional network, as well as creating opportunities for dialogue with regards to your work. Such discussions are both beneficial in terms of acting as a foil, shining new light on current endeavors, as well as creating potential for future suggestions and direction on a project. Ongoing technical projects will require dedicated time to test, validate, and maintain overall to ensure everything is working as expected. Projects vary from fellow to fellow and it is important to understand the scope of the technical project and ask as many questions as necessary before, during, and after the project to successfully maintain it. Your best resources will be project documentation and current and/or past fellows whom have worked on the specific technical project. You likely have been engaged already in the civic technology field. If so, continuing with the enthusiasm that brought you to Microsoft in the first place will provide shine both yourself and Microsoft in the best light during your tenure. If you have not had prior experience in the civic technology space, then welcome. A plethora of resources are available to new individuals interested in the field, and Microsoft is a great jumping point from which to access them. At the New York branch of Microsoft Cities, Civic Hall is an amazing resource. This is where the New York program works out of on many days and where most major civic tech events take place, from Code for America\u2019s local New York brigade (discussed in detail in the below) to events such as Fast Company\u2019s Innovation Week. You will have access to Civic Hall as a member to participate in events and work out of the space throughout the year. The Director of the Cities New York branch, John Paul Farmer is well connected and able to give you access to a myriad of civic-minded tech events happening throughout the city. Be sure to be open to these events and use your time at Microsoft to attend as many as possible, from NY Tech Meetup to NYC Big Apps challenge events and Bloomberg\u2019s Data for Good Exchange! Relevant Literature Read: https://blogs.microsoft.com/on-the-issues/2016/04/27/towards-taxonomy-civic-technology/#sm.0006yr0w9eyocpz11xb1p3cickj2i Peruse: http://bit.ly/organizecivictech Watch: https://www.youtube.com/watch?v=sbqNkz_mjng Watch: https://www.youtube.com/watch?v=fccsexIGqHs Play with: http://civicgraph.io Read: http://www.fastcompany.com/3046756/obama-and-his-geeks Read: http://civichall.org/civicist/a-maddeningly-broad-term/ Read: https://news.microsoft.com/cloudforgood/ Peruse: https://bizspark.microsoft.com/ Download: https://powerbi.microsoft.com/en-us/ Peruse: https://docs.google.com/document/d/1TWmly46ja6hEcwY41T1h9PN2KeGv2vV0TldBi6Fa0do/edit?usp=sharing Virtual Academy Courses to peruse: https://mva.microsoft.com/en-US/training-courses/data-visualizations-with-power-bi-in-excel-2013-8889?l=8JaEY2A3_1704984382 https://mva.microsoft.com/en-US/training-courses/deploying-web-apps-to-azure-app-service-16629?l=dcyeRCTpC_5804300477 https://mva.microsoft.com/en-US/training-courses/implementing-big-data-analysis-8311?l=gOOGH0Yy_4304984382 https://mva.microsoft.com/en-US/training-courses/data-analysis-with-excel-16654?l=w0fgRO8sC_306573942 Civic Tech Events Prior to the month ending, look up events throughout the city that can be added to the Microsoft NY blog and that would be of interest/important to attend. Add them to your own calendar as well! Resources to search for events: Ask John! last years' blog posts BetaNYC - https://www.meetup.com/betanyc/events/ Civic Hall - https://civichall.org/events/ CUNY Tech Meetup - https://www.meetup.com/CUNY-Tech-Meetup/events/ NY Tech Meetup - https://www.meetup.com/ny-tech/events/ Meetup.com and Eventbrite are great resources for external Civic Tech events as well.","title":"Good To Know"},{"location":"starthere/#expectations","text":"Expectations and roles vary amongst the different Fellows who pass through the program. It is best to discuss, early on, with the directors of your program to best understand the goals that they have in mind, as well as to convey what you personally hope to seek from the program. Regardless of your focus, communication of your role within Microsoft is beneficial to both Microsoft in terms of broadcasting Cities\u2019 mission and yourself. Personal gain can be had in the form of additional contacts, expanding your professional network, as well as creating opportunities for dialogue with regards to your work. Such discussions are both beneficial in terms of acting as a foil, shining new light on current endeavors, as well as creating potential for future suggestions and direction on a project. Ongoing technical projects will require dedicated time to test, validate, and maintain overall to ensure everything is working as expected. Projects vary from fellow to fellow and it is important to understand the scope of the technical project and ask as many questions as necessary before, during, and after the project to successfully maintain it. Your best resources will be project documentation and current and/or past fellows whom have worked on the specific technical project. You likely have been engaged already in the civic technology field. If so, continuing with the enthusiasm that brought you to Microsoft in the first place will provide shine both yourself and Microsoft in the best light during your tenure. If you have not had prior experience in the civic technology space, then welcome. A plethora of resources are available to new individuals interested in the field, and Microsoft is a great jumping point from which to access them. At the New York branch of Microsoft Cities, Civic Hall is an amazing resource. This is where the New York program works out of on many days and where most major civic tech events take place, from Code for America\u2019s local New York brigade (discussed in detail in the below) to events such as Fast Company\u2019s Innovation Week. You will have access to Civic Hall as a member to participate in events and work out of the space throughout the year. The Director of the Cities New York branch, John Paul Farmer is well connected and able to give you access to a myriad of civic-minded tech events happening throughout the city. Be sure to be open to these events and use your time at Microsoft to attend as many as possible, from NY Tech Meetup to NYC Big Apps challenge events and Bloomberg\u2019s Data for Good Exchange!","title":"Expectations"},{"location":"starthere/#relevant-literature","text":"Read: https://blogs.microsoft.com/on-the-issues/2016/04/27/towards-taxonomy-civic-technology/#sm.0006yr0w9eyocpz11xb1p3cickj2i Peruse: http://bit.ly/organizecivictech Watch: https://www.youtube.com/watch?v=sbqNkz_mjng Watch: https://www.youtube.com/watch?v=fccsexIGqHs Play with: http://civicgraph.io Read: http://www.fastcompany.com/3046756/obama-and-his-geeks Read: http://civichall.org/civicist/a-maddeningly-broad-term/ Read: https://news.microsoft.com/cloudforgood/ Peruse: https://bizspark.microsoft.com/ Download: https://powerbi.microsoft.com/en-us/ Peruse: https://docs.google.com/document/d/1TWmly46ja6hEcwY41T1h9PN2KeGv2vV0TldBi6Fa0do/edit?usp=sharing Virtual Academy Courses to peruse: https://mva.microsoft.com/en-US/training-courses/data-visualizations-with-power-bi-in-excel-2013-8889?l=8JaEY2A3_1704984382 https://mva.microsoft.com/en-US/training-courses/deploying-web-apps-to-azure-app-service-16629?l=dcyeRCTpC_5804300477 https://mva.microsoft.com/en-US/training-courses/implementing-big-data-analysis-8311?l=gOOGH0Yy_4304984382 https://mva.microsoft.com/en-US/training-courses/data-analysis-with-excel-16654?l=w0fgRO8sC_306573942","title":"Relevant Literature"},{"location":"starthere/#civic-tech-events","text":"Prior to the month ending, look up events throughout the city that can be added to the Microsoft NY blog and that would be of interest/important to attend. Add them to your own calendar as well! Resources to search for events: Ask John! last years' blog posts BetaNYC - https://www.meetup.com/betanyc/events/ Civic Hall - https://civichall.org/events/ CUNY Tech Meetup - https://www.meetup.com/CUNY-Tech-Meetup/events/ NY Tech Meetup - https://www.meetup.com/ny-tech/events/ Meetup.com and Eventbrite are great resources for external Civic Tech events as well.","title":"Civic Tech Events"},{"location":"subs/","text":"Subscriptions - Paid & Free The services listed in the table below are used by Microsoft Cities team for various projects. Some of the services are paid on a monthly/yearly basis (as inidicated) and are on auto-renew. If payment method needs to be changed, you must log in to each paid service and adjust the billing options accordingly. The following is a guide to each column of the table: Subscription - The name of the subscription service Use - What the service is currently being used for Authentication - How to log into each service. We are currently using LastPass (see John Farmer for access) to store credentials for each service. You can log into LastPass and access the credentials for each or install the LastPass Google Chrome plugin to populate the credentials for you on each login site. Paid/Unpaid - Indicates whether we currently pay for the service Frequency - Indicates billing cycle for a paid service (N/A if the plan is free/sponsored) Subscription Use Authentication Paid/Unpaid Frequency Github - MicrosoftNY Private repo for TCE fellows Access via LastPass Paid plan Monthly - Every 25th Github - MicrosoftTCE (org) Public repos for Microsoft Cities projects Access via LastPass Free plan N/A Namecheap Registrar for techjobsacademy.com and civicgraph.io Access via LastPass Paid Yearly - Every March Azure Hosting for Civic Graph app, etc. Access via LastPass (or connect to your Microsoft email) Free (sponsored by Microsoft) N/A ClearDB Hosting for Civic Graph SQL databases Access via LastPass Paid Monthly - Every 6th","title":"Subscriptions"},{"location":"subs/#subscriptions-paid-free","text":"The services listed in the table below are used by Microsoft Cities team for various projects. Some of the services are paid on a monthly/yearly basis (as inidicated) and are on auto-renew. If payment method needs to be changed, you must log in to each paid service and adjust the billing options accordingly. The following is a guide to each column of the table: Subscription - The name of the subscription service Use - What the service is currently being used for Authentication - How to log into each service. We are currently using LastPass (see John Farmer for access) to store credentials for each service. You can log into LastPass and access the credentials for each or install the LastPass Google Chrome plugin to populate the credentials for you on each login site. Paid/Unpaid - Indicates whether we currently pay for the service Frequency - Indicates billing cycle for a paid service (N/A if the plan is free/sponsored) Subscription Use Authentication Paid/Unpaid Frequency Github - MicrosoftNY Private repo for TCE fellows Access via LastPass Paid plan Monthly - Every 25th Github - MicrosoftTCE (org) Public repos for Microsoft Cities projects Access via LastPass Free plan N/A Namecheap Registrar for techjobsacademy.com and civicgraph.io Access via LastPass Paid Yearly - Every March Azure Hosting for Civic Graph app, etc. Access via LastPass (or connect to your Microsoft email) Free (sponsored by Microsoft) N/A ClearDB Hosting for Civic Graph SQL databases Access via LastPass Paid Monthly - Every 6th","title":"Subscriptions - Paid &amp; Free"},{"location":"tja/","text":"What is Tech Jobs Academy? Tech Jobs Academy is an innovative approach to a hard problem: the skills gap. The program is a framework through which talented people acquire in-demand IT skills, enabling them to gain employment with local businesses \u2013 including the hundreds of thousands of Microsoft partner companies worldwide \u2013 in need of precisely these 21st century skills. Tech Jobs Academy was created for those who have everything but opportunity. The program aims to expand access to in-demand technical training to unemployed or underemployed adults who are passionate about launching careers in technology. Tech Jobs Academy employs a hybrid learning model that blends hard skills and soft skills, pairing a focus on real-world projects with labs, lecture, and certification exams. Throughout the program, each participant completes roughly 1,000 hours of high-quality skills development. During Tech Jobs Academy's pilot iteration in New York City, Microsoft collaborated with the Mayor's Tech Talent Pipeline and the New York City College of Technology to deliver Cloud and Server Administration skills to 50 trainees who had been carefully selected from over 500 applicants. Participants gained deep subject matter expertise and had the opportunity to become Microsoft Certified Professionals (MCP), Microsoft Certified Solutions Associates (MCSA), and Microsoft Certified Solutions Experts (MCSE), which have been shown to increase employability and compensation. In addition to the specific IT skills gained, graduates developed strong collaboration skills and technical writing abilities. Highlights The TJA playbook can be viewed here: http://techjobsacademy.com/playbook.pdf Each cohort of 25 trainees attended classes full-time over the course of four months. Of those who began the program, 94% graduated. For context, only 59% of matriculating U.S. college students ultimately finish. Tech Jobs Academy graduates\u2019 new job titles include Cloud Engineer, System Administrator, and IT Specialist; they work at Xerox, the AntiDefamation League, and the City of New York, among others Earnings jump over 5x (from $9k to $47k), lifting people out of poverty and into the middle class in a matter of months, not years. Technical Breakdown The repo for TJA is hosted on Github at the following link: https://github.com/MicrosoftTCE/tech-jobs-page TJA is hosted on Github (not Azure) and is a front-end website (HTML, CSS, Javascript) with Mailchimp list integration for signups (available via LastPass). Local Environment Setup To make changes locally, clone the repo and access the index.html page from your browser or launch from a local server. Deployment To push changes to production, create a new branch and submit a pull request to the gh-pages branch. Once the pull request has been reviewed, it can be merged and the changes should be available within a minute (depending on Github replication). Registrar The domain is hosted via Namecheap.com","title":"Project - Tech Jobs Academy"},{"location":"tja/#what-is-tech-jobs-academy","text":"Tech Jobs Academy is an innovative approach to a hard problem: the skills gap. The program is a framework through which talented people acquire in-demand IT skills, enabling them to gain employment with local businesses \u2013 including the hundreds of thousands of Microsoft partner companies worldwide \u2013 in need of precisely these 21st century skills. Tech Jobs Academy was created for those who have everything but opportunity. The program aims to expand access to in-demand technical training to unemployed or underemployed adults who are passionate about launching careers in technology. Tech Jobs Academy employs a hybrid learning model that blends hard skills and soft skills, pairing a focus on real-world projects with labs, lecture, and certification exams. Throughout the program, each participant completes roughly 1,000 hours of high-quality skills development. During Tech Jobs Academy's pilot iteration in New York City, Microsoft collaborated with the Mayor's Tech Talent Pipeline and the New York City College of Technology to deliver Cloud and Server Administration skills to 50 trainees who had been carefully selected from over 500 applicants. Participants gained deep subject matter expertise and had the opportunity to become Microsoft Certified Professionals (MCP), Microsoft Certified Solutions Associates (MCSA), and Microsoft Certified Solutions Experts (MCSE), which have been shown to increase employability and compensation. In addition to the specific IT skills gained, graduates developed strong collaboration skills and technical writing abilities.","title":"What is Tech Jobs Academy?"},{"location":"tja/#highlights","text":"The TJA playbook can be viewed here: http://techjobsacademy.com/playbook.pdf Each cohort of 25 trainees attended classes full-time over the course of four months. Of those who began the program, 94% graduated. For context, only 59% of matriculating U.S. college students ultimately finish. Tech Jobs Academy graduates\u2019 new job titles include Cloud Engineer, System Administrator, and IT Specialist; they work at Xerox, the AntiDefamation League, and the City of New York, among others Earnings jump over 5x (from $9k to $47k), lifting people out of poverty and into the middle class in a matter of months, not years.","title":"Highlights"},{"location":"tja/#technical-breakdown","text":"The repo for TJA is hosted on Github at the following link: https://github.com/MicrosoftTCE/tech-jobs-page TJA is hosted on Github (not Azure) and is a front-end website (HTML, CSS, Javascript) with Mailchimp list integration for signups (available via LastPass).","title":"Technical Breakdown"},{"location":"tja/#local-environment-setup","text":"To make changes locally, clone the repo and access the index.html page from your browser or launch from a local server.","title":"Local Environment Setup"},{"location":"tja/#deployment","text":"To push changes to production, create a new branch and submit a pull request to the gh-pages branch. Once the pull request has been reviewed, it can be merged and the changes should be available within a minute (depending on Github replication).","title":"Deployment"},{"location":"tja/#registrar","text":"The domain is hosted via Namecheap.com","title":"Registrar"}]}